# Generated by Django 5.1.5 on 2025-01-29 12:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(db_index=True, max_length=100)),
                ('country', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'indexes': [models.Index(fields=['city', 'country'], name='real_state__city_60db93_idx')],
                'unique_together': {('city', 'country')},
            },
        ),
        migrations.CreateModel(
            name='RealState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(db_index=True, decimal_places=3, max_digits=15)),
                ('bedrooms', models.PositiveIntegerField(db_index=True)),
                ('bathrooms', models.PositiveIntegerField(db_index=True)),
                ('sqft', models.DecimalField(decimal_places=3, max_digits=15)),
                ('year_built', models.PositiveIntegerField(db_index=True)),
                ('property_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial')], db_index=True, default='residential', max_length=50)),
                ('parking_spaces', models.PositiveIntegerField(default=0)),
                ('has_garage', models.BooleanField(db_index=True, default=False)),
                ('has_pool', models.BooleanField(db_index=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('features', models.ManyToManyField(related_name='real_states', to='real_state.feature')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='real_state.location')),
            ],
            options={
                'verbose_name': 'Real Estate Property',
                'verbose_name_plural': 'Real Estate Properties',
            },
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('view', 'View'), ('like', 'Like'), ('save', 'Save')], default='view', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='real_state.realstate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='realstate',
            index=models.Index(fields=['price'], name='real_state__price_5c69bf_idx'),
        ),
        migrations.AddIndex(
            model_name='realstate',
            index=models.Index(fields=['year_built'], name='real_state__year_bu_bf7514_idx'),
        ),
        migrations.AddIndex(
            model_name='realstate',
            index=models.Index(fields=['price', 'bedrooms', 'bathrooms'], name='real_state__price_696db1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userinteraction',
            unique_together={('user', 'property')},
        ),
    ]
